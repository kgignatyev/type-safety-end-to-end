syntax = "proto3";

package kgi.geography_api;
option java_package = "kgi.geography_api";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

message LatLng {
    // The latitude in degrees. It must be in the range [-90.0, +90.0].
    double lat = 1;
    // The longitude in degrees. It must be in the range [-180.0, +180.0].
    double lng = 2;
}

message Polygon {
    repeated LatLng vertices = 1;
}

enum AreaType {
   TEAM_CONTROL = 0;
   SERVICE_AREA = 1;
}

message Area {
    string id = 1;
    Polygon polygon = 2;
    string name = 3;
    AreaType area_type = 4;
    string title = 5;
}

message AreasList {
    repeated Area items = 1;
}

message AreaSearchCriteria {
    oneof criteria {
      string text = 1;//substring match, case insensitive
      LatLng contains_point = 2;
    }
}
service Geography {
    rpc CreateArea (Area) returns (Area);
    rpc GetAreaByID (google.protobuf.StringValue) returns (Area);
    rpc UpdateArea (Area) returns (Area);
    rpc DeleteAreaByID(google.protobuf.StringValue ) returns (google.protobuf.Empty);
    rpc FindAreas(google.protobuf.StringValue ) returns (AreasList);
    // deprecated, use FindAreasBy
    rpc FindAreasContaining( LatLng ) returns (AreasList) {
        option deprecated = true;
    };
    rpc FindAreasBy( AreaSearchCriteria ) returns (AreasList);
}

